package es.deusto.bigdata.flume.twitter;

/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** aAvroSchemaTwitter */
@org.apache.avro.specific.AvroGenerated
public class AvroSchemaTwitter extends org.apache.avro.specific.SpecificRecordBase
		implements org.apache.avro.specific.SpecificRecord {
	private static final long serialVersionUID = 8631330500973015882L;
	public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse(
			"{\"type\":\"record\",\"name\":\"AvroSchemaTwitter\",\"AvroSchemaTwitter\":\"aAvroSchemaTwitter\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"user_friends_count\",\"type\":[\"int\",\"null\"]},{\"name\":\"user_location\",\"type\":[\"string\",\"null\"]},{\"name\":\"user_description\",\"type\":[\"string\",\"null\"]},{\"name\":\"user_statuses_count\",\"type\":[\"int\",\"null\"]},{\"name\":\"user_followers_count\",\"type\":[\"int\",\"null\"]},{\"name\":\"user_name\",\"type\":[\"string\",\"null\"]},{\"name\":\"user_screen_name\",\"type\":[\"string\",\"null\"]},{\"name\":\"created_at\",\"type\":[\"string\",\"null\"]},{\"name\":\"text\",\"type\":[\"string\",\"null\"]},{\"name\":\"retweet_count\",\"type\":[\"long\",\"null\"]},{\"name\":\"retweeted\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"in_reply_to_user_id\",\"type\":[\"long\",\"null\"]},{\"name\":\"source\",\"type\":[\"string\",\"null\"]},{\"name\":\"in_reply_to_status_id\",\"type\":[\"long\",\"null\"]},{\"name\":\"media_url_https\",\"type\":[\"string\",\"null\"]},{\"name\":\"expanded_url\",\"type\":[\"string\",\"null\"]}]}");

	public static org.apache.avro.Schema getClassSchema() {
		return SCHEMA$;
	}

	@Deprecated
	public java.lang.CharSequence id;
	@Deprecated
	public java.lang.Integer user_friends_count;
	@Deprecated
	public java.lang.CharSequence user_location;
	@Deprecated
	public java.lang.CharSequence user_description;
	@Deprecated
	public java.lang.Integer user_statuses_count;
	@Deprecated
	public java.lang.Integer user_followers_count;
	@Deprecated
	public java.lang.CharSequence user_name;
	@Deprecated
	public java.lang.CharSequence user_screen_name;
	@Deprecated
	public java.lang.CharSequence created_at;
	@Deprecated
	public java.lang.CharSequence text;
	@Deprecated
	public java.lang.Long retweet_count;
	@Deprecated
	public java.lang.Boolean retweeted;
	@Deprecated
	public java.lang.Long in_reply_to_user_id;
	@Deprecated
	public java.lang.CharSequence source;
	@Deprecated
	public java.lang.Long in_reply_to_status_id;
	@Deprecated
	public java.lang.CharSequence media_url_https;
	@Deprecated
	public java.lang.CharSequence expanded_url;

	/**
	 * Default constructor. Note that this does not initialize fields to their
	 * default values from the schema. If that is desired then one should use
	 * <code>newBuilder()</code>.
	 */
	public AvroSchemaTwitter() {
	}

	/**
	 * All-args constructor.
	 * 
	 * @param id
	 *            The new value for id
	 * @param user_friends_count
	 *            The new value for user_friends_count
	 * @param user_location
	 *            The new value for user_location
	 * @param user_description
	 *            The new value for user_description
	 * @param user_statuses_count
	 *            The new value for user_statuses_count
	 * @param user_followers_count
	 *            The new value for user_followers_count
	 * @param user_name
	 *            The new value for user_name
	 * @param user_screen_name
	 *            The new value for user_screen_name
	 * @param created_at
	 *            The new value for created_at
	 * @param text
	 *            The new value for text
	 * @param retweet_count
	 *            The new value for retweet_count
	 * @param retweeted
	 *            The new value for retweeted
	 * @param in_reply_to_user_id
	 *            The new value for in_reply_to_user_id
	 * @param source
	 *            The new value for source
	 * @param in_reply_to_status_id
	 *            The new value for in_reply_to_status_id
	 * @param media_url_https
	 *            The new value for media_url_https
	 * @param expanded_url
	 *            The new value for expanded_url
	 */
	public AvroSchemaTwitter(java.lang.CharSequence id, java.lang.Integer user_friends_count,
			java.lang.CharSequence user_location, java.lang.CharSequence user_description,
			java.lang.Integer user_statuses_count, java.lang.Integer user_followers_count,
			java.lang.CharSequence user_name, java.lang.CharSequence user_screen_name,
			java.lang.CharSequence created_at, java.lang.CharSequence text, java.lang.Long retweet_count,
			java.lang.Boolean retweeted, java.lang.Long in_reply_to_user_id, java.lang.CharSequence source,
			java.lang.Long in_reply_to_status_id, java.lang.CharSequence media_url_https,
			java.lang.CharSequence expanded_url) {
		this.id = id;
		this.user_friends_count = user_friends_count;
		this.user_location = user_location;
		this.user_description = user_description;
		this.user_statuses_count = user_statuses_count;
		this.user_followers_count = user_followers_count;
		this.user_name = user_name;
		this.user_screen_name = user_screen_name;
		this.created_at = created_at;
		this.text = text;
		this.retweet_count = retweet_count;
		this.retweeted = retweeted;
		this.in_reply_to_user_id = in_reply_to_user_id;
		this.source = source;
		this.in_reply_to_status_id = in_reply_to_status_id;
		this.media_url_https = media_url_https;
		this.expanded_url = expanded_url;
	}

	public org.apache.avro.Schema getSchema() {
		return SCHEMA$;
	}

	// Used by DatumWriter. Applications should not call.
	public java.lang.Object get(int field$) {
		switch (field$) {
		case 0:
			return id;
		case 1:
			return user_friends_count;
		case 2:
			return user_location;
		case 3:
			return user_description;
		case 4:
			return user_statuses_count;
		case 5:
			return user_followers_count;
		case 6:
			return user_name;
		case 7:
			return user_screen_name;
		case 8:
			return created_at;
		case 9:
			return text;
		case 10:
			return retweet_count;
		case 11:
			return retweeted;
		case 12:
			return in_reply_to_user_id;
		case 13:
			return source;
		case 14:
			return in_reply_to_status_id;
		case 15:
			return media_url_https;
		case 16:
			return expanded_url;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}

	// Used by DatumReader. Applications should not call.
	@SuppressWarnings(value = "unchecked")
	public void put(int field$, java.lang.Object value$) {
		switch (field$) {
		case 0:
			id = (java.lang.CharSequence) value$;
			break;
		case 1:
			user_friends_count = (java.lang.Integer) value$;
			break;
		case 2:
			user_location = (java.lang.CharSequence) value$;
			break;
		case 3:
			user_description = (java.lang.CharSequence) value$;
			break;
		case 4:
			user_statuses_count = (java.lang.Integer) value$;
			break;
		case 5:
			user_followers_count = (java.lang.Integer) value$;
			break;
		case 6:
			user_name = (java.lang.CharSequence) value$;
			break;
		case 7:
			user_screen_name = (java.lang.CharSequence) value$;
			break;
		case 8:
			created_at = (java.lang.CharSequence) value$;
			break;
		case 9:
			text = (java.lang.CharSequence) value$;
			break;
		case 10:
			retweet_count = (java.lang.Long) value$;
			break;
		case 11:
			retweeted = (java.lang.Boolean) value$;
			break;
		case 12:
			in_reply_to_user_id = (java.lang.Long) value$;
			break;
		case 13:
			source = (java.lang.CharSequence) value$;
			break;
		case 14:
			in_reply_to_status_id = (java.lang.Long) value$;
			break;
		case 15:
			media_url_https = (java.lang.CharSequence) value$;
			break;
		case 16:
			expanded_url = (java.lang.CharSequence) value$;
			break;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}

	/**
	 * Gets the value of the 'id' field.
	 * 
	 * @return The value of the 'id' field.
	 */
	public java.lang.CharSequence getId() {
		return id;
	}

	/**
	 * Sets the value of the 'id' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setId(java.lang.CharSequence value) {
		this.id = value;
	}

	/**
	 * Gets the value of the 'user_friends_count' field.
	 * 
	 * @return The value of the 'user_friends_count' field.
	 */
	public java.lang.Integer getUserFriendsCount() {
		return user_friends_count;
	}

	/**
	 * Sets the value of the 'user_friends_count' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setUserFriendsCount(java.lang.Integer value) {
		this.user_friends_count = value;
	}

	/**
	 * Gets the value of the 'user_location' field.
	 * 
	 * @return The value of the 'user_location' field.
	 */
	public java.lang.CharSequence getUserLocation() {
		return user_location;
	}

	/**
	 * Sets the value of the 'user_location' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setUserLocation(java.lang.CharSequence value) {
		this.user_location = value;
	}

	/**
	 * Gets the value of the 'user_description' field.
	 * 
	 * @return The value of the 'user_description' field.
	 */
	public java.lang.CharSequence getUserDescription() {
		return user_description;
	}

	/**
	 * Sets the value of the 'user_description' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setUserDescription(java.lang.CharSequence value) {
		this.user_description = value;
	}

	/**
	 * Gets the value of the 'user_statuses_count' field.
	 * 
	 * @return The value of the 'user_statuses_count' field.
	 */
	public java.lang.Integer getUserStatusesCount() {
		return user_statuses_count;
	}

	/**
	 * Sets the value of the 'user_statuses_count' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setUserStatusesCount(java.lang.Integer value) {
		this.user_statuses_count = value;
	}

	/**
	 * Gets the value of the 'user_followers_count' field.
	 * 
	 * @return The value of the 'user_followers_count' field.
	 */
	public java.lang.Integer getUserFollowersCount() {
		return user_followers_count;
	}

	/**
	 * Sets the value of the 'user_followers_count' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setUserFollowersCount(java.lang.Integer value) {
		this.user_followers_count = value;
	}

	/**
	 * Gets the value of the 'user_name' field.
	 * 
	 * @return The value of the 'user_name' field.
	 */
	public java.lang.CharSequence getUserName() {
		return user_name;
	}

	/**
	 * Sets the value of the 'user_name' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setUserName(java.lang.CharSequence value) {
		this.user_name = value;
	}

	/**
	 * Gets the value of the 'user_screen_name' field.
	 * 
	 * @return The value of the 'user_screen_name' field.
	 */
	public java.lang.CharSequence getUserScreenName() {
		return user_screen_name;
	}

	/**
	 * Sets the value of the 'user_screen_name' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setUserScreenName(java.lang.CharSequence value) {
		this.user_screen_name = value;
	}

	/**
	 * Gets the value of the 'created_at' field.
	 * 
	 * @return The value of the 'created_at' field.
	 */
	public java.lang.CharSequence getCreatedAt() {
		return created_at;
	}

	/**
	 * Sets the value of the 'created_at' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setCreatedAt(java.lang.CharSequence value) {
		this.created_at = value;
	}

	/**
	 * Gets the value of the 'text' field.
	 * 
	 * @return The value of the 'text' field.
	 */
	public java.lang.CharSequence getText() {
		return text;
	}

	/**
	 * Sets the value of the 'text' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setText(java.lang.CharSequence value) {
		this.text = value;
	}

	/**
	 * Gets the value of the 'retweet_count' field.
	 * 
	 * @return The value of the 'retweet_count' field.
	 */
	public java.lang.Long getRetweetCount() {
		return retweet_count;
	}

	/**
	 * Sets the value of the 'retweet_count' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setRetweetCount(java.lang.Long value) {
		this.retweet_count = value;
	}

	/**
	 * Gets the value of the 'retweeted' field.
	 * 
	 * @return The value of the 'retweeted' field.
	 */
	public java.lang.Boolean getRetweeted() {
		return retweeted;
	}

	/**
	 * Sets the value of the 'retweeted' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setRetweeted(java.lang.Boolean value) {
		this.retweeted = value;
	}

	/**
	 * Gets the value of the 'in_reply_to_user_id' field.
	 * 
	 * @return The value of the 'in_reply_to_user_id' field.
	 */
	public java.lang.Long getInReplyToUserId() {
		return in_reply_to_user_id;
	}

	/**
	 * Sets the value of the 'in_reply_to_user_id' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setInReplyToUserId(java.lang.Long value) {
		this.in_reply_to_user_id = value;
	}

	/**
	 * Gets the value of the 'source' field.
	 * 
	 * @return The value of the 'source' field.
	 */
	public java.lang.CharSequence getSource() {
		return source;
	}

	/**
	 * Sets the value of the 'source' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setSource(java.lang.CharSequence value) {
		this.source = value;
	}

	/**
	 * Gets the value of the 'in_reply_to_status_id' field.
	 * 
	 * @return The value of the 'in_reply_to_status_id' field.
	 */
	public java.lang.Long getInReplyToStatusId() {
		return in_reply_to_status_id;
	}

	/**
	 * Sets the value of the 'in_reply_to_status_id' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setInReplyToStatusId(java.lang.Long value) {
		this.in_reply_to_status_id = value;
	}

	/**
	 * Gets the value of the 'media_url_https' field.
	 * 
	 * @return The value of the 'media_url_https' field.
	 */
	public java.lang.CharSequence getMediaUrlHttps() {
		return media_url_https;
	}

	/**
	 * Sets the value of the 'media_url_https' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setMediaUrlHttps(java.lang.CharSequence value) {
		this.media_url_https = value;
	}

	/**
	 * Gets the value of the 'expanded_url' field.
	 * 
	 * @return The value of the 'expanded_url' field.
	 */
	public java.lang.CharSequence getExpandedUrl() {
		return expanded_url;
	}

	/**
	 * Sets the value of the 'expanded_url' field.
	 * 
	 * @param value
	 *            the value to set.
	 */
	public void setExpandedUrl(java.lang.CharSequence value) {
		this.expanded_url = value;
	}

	/**
	 * Creates a new AvroSchemaTwitter RecordBuilder.
	 * 
	 * @return A new AvroSchemaTwitter RecordBuilder
	 */
	public static AvroSchemaTwitter.Builder newBuilder() {
		return new AvroSchemaTwitter.Builder();
	}

	/**
	 * Creates a new AvroSchemaTwitter RecordBuilder by copying an existing
	 * Builder.
	 * 
	 * @param other
	 *            The existing builder to copy.
	 * @return A new AvroSchemaTwitter RecordBuilder
	 */
	public static AvroSchemaTwitter.Builder newBuilder(AvroSchemaTwitter.Builder other) {
		return new AvroSchemaTwitter.Builder(other);
	}

	/**
	 * Creates a new AvroSchemaTwitter RecordBuilder by copying an existing
	 * AvroSchemaTwitter instance.
	 * 
	 * @param other
	 *            The existing instance to copy.
	 * @return A new AvroSchemaTwitter RecordBuilder
	 */
	public static AvroSchemaTwitter.Builder newBuilder(AvroSchemaTwitter other) {
		return new AvroSchemaTwitter.Builder(other);
	}

	/**
	 * RecordBuilder for AvroSchemaTwitter instances.
	 */
	public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroSchemaTwitter>
			implements org.apache.avro.data.RecordBuilder<AvroSchemaTwitter> {

		private java.lang.CharSequence id;
		private java.lang.Integer user_friends_count;
		private java.lang.CharSequence user_location;
		private java.lang.CharSequence user_description;
		private java.lang.Integer user_statuses_count;
		private java.lang.Integer user_followers_count;
		private java.lang.CharSequence user_name;
		private java.lang.CharSequence user_screen_name;
		private java.lang.CharSequence created_at;
		private java.lang.CharSequence text;
		private java.lang.Long retweet_count;
		private java.lang.Boolean retweeted;
		private java.lang.Long in_reply_to_user_id;
		private java.lang.CharSequence source;
		private java.lang.Long in_reply_to_status_id;
		private java.lang.CharSequence media_url_https;
		private java.lang.CharSequence expanded_url;

		/** Creates a new Builder */
		private Builder() {
			super(SCHEMA$);
		}

		/**
		 * Creates a Builder by copying an existing Builder.
		 * 
		 * @param other
		 *            The existing Builder to copy.
		 */
		private Builder(AvroSchemaTwitter.Builder other) {
			super(other);
			if (isValidValue(fields()[0], other.id)) {
				this.id = data().deepCopy(fields()[0].schema(), other.id);
				fieldSetFlags()[0] = true;
			}
			if (isValidValue(fields()[1], other.user_friends_count)) {
				this.user_friends_count = data().deepCopy(fields()[1].schema(), other.user_friends_count);
				fieldSetFlags()[1] = true;
			}
			if (isValidValue(fields()[2], other.user_location)) {
				this.user_location = data().deepCopy(fields()[2].schema(), other.user_location);
				fieldSetFlags()[2] = true;
			}
			if (isValidValue(fields()[3], other.user_description)) {
				this.user_description = data().deepCopy(fields()[3].schema(), other.user_description);
				fieldSetFlags()[3] = true;
			}
			if (isValidValue(fields()[4], other.user_statuses_count)) {
				this.user_statuses_count = data().deepCopy(fields()[4].schema(), other.user_statuses_count);
				fieldSetFlags()[4] = true;
			}
			if (isValidValue(fields()[5], other.user_followers_count)) {
				this.user_followers_count = data().deepCopy(fields()[5].schema(), other.user_followers_count);
				fieldSetFlags()[5] = true;
			}
			if (isValidValue(fields()[6], other.user_name)) {
				this.user_name = data().deepCopy(fields()[6].schema(), other.user_name);
				fieldSetFlags()[6] = true;
			}
			if (isValidValue(fields()[7], other.user_screen_name)) {
				this.user_screen_name = data().deepCopy(fields()[7].schema(), other.user_screen_name);
				fieldSetFlags()[7] = true;
			}
			if (isValidValue(fields()[8], other.created_at)) {
				this.created_at = data().deepCopy(fields()[8].schema(), other.created_at);
				fieldSetFlags()[8] = true;
			}
			if (isValidValue(fields()[9], other.text)) {
				this.text = data().deepCopy(fields()[9].schema(), other.text);
				fieldSetFlags()[9] = true;
			}
			if (isValidValue(fields()[10], other.retweet_count)) {
				this.retweet_count = data().deepCopy(fields()[10].schema(), other.retweet_count);
				fieldSetFlags()[10] = true;
			}
			if (isValidValue(fields()[11], other.retweeted)) {
				this.retweeted = data().deepCopy(fields()[11].schema(), other.retweeted);
				fieldSetFlags()[11] = true;
			}
			if (isValidValue(fields()[12], other.in_reply_to_user_id)) {
				this.in_reply_to_user_id = data().deepCopy(fields()[12].schema(), other.in_reply_to_user_id);
				fieldSetFlags()[12] = true;
			}
			if (isValidValue(fields()[13], other.source)) {
				this.source = data().deepCopy(fields()[13].schema(), other.source);
				fieldSetFlags()[13] = true;
			}
			if (isValidValue(fields()[14], other.in_reply_to_status_id)) {
				this.in_reply_to_status_id = data().deepCopy(fields()[14].schema(), other.in_reply_to_status_id);
				fieldSetFlags()[14] = true;
			}
			if (isValidValue(fields()[15], other.media_url_https)) {
				this.media_url_https = data().deepCopy(fields()[15].schema(), other.media_url_https);
				fieldSetFlags()[15] = true;
			}
			if (isValidValue(fields()[16], other.expanded_url)) {
				this.expanded_url = data().deepCopy(fields()[16].schema(), other.expanded_url);
				fieldSetFlags()[16] = true;
			}
		}

		/**
		 * Creates a Builder by copying an existing AvroSchemaTwitter instance
		 * 
		 * @param other
		 *            The existing instance to copy.
		 */
		private Builder(AvroSchemaTwitter other) {
			super(SCHEMA$);
			if (isValidValue(fields()[0], other.id)) {
				this.id = data().deepCopy(fields()[0].schema(), other.id);
				fieldSetFlags()[0] = true;
			}
			if (isValidValue(fields()[1], other.user_friends_count)) {
				this.user_friends_count = data().deepCopy(fields()[1].schema(), other.user_friends_count);
				fieldSetFlags()[1] = true;
			}
			if (isValidValue(fields()[2], other.user_location)) {
				this.user_location = data().deepCopy(fields()[2].schema(), other.user_location);
				fieldSetFlags()[2] = true;
			}
			if (isValidValue(fields()[3], other.user_description)) {
				this.user_description = data().deepCopy(fields()[3].schema(), other.user_description);
				fieldSetFlags()[3] = true;
			}
			if (isValidValue(fields()[4], other.user_statuses_count)) {
				this.user_statuses_count = data().deepCopy(fields()[4].schema(), other.user_statuses_count);
				fieldSetFlags()[4] = true;
			}
			if (isValidValue(fields()[5], other.user_followers_count)) {
				this.user_followers_count = data().deepCopy(fields()[5].schema(), other.user_followers_count);
				fieldSetFlags()[5] = true;
			}
			if (isValidValue(fields()[6], other.user_name)) {
				this.user_name = data().deepCopy(fields()[6].schema(), other.user_name);
				fieldSetFlags()[6] = true;
			}
			if (isValidValue(fields()[7], other.user_screen_name)) {
				this.user_screen_name = data().deepCopy(fields()[7].schema(), other.user_screen_name);
				fieldSetFlags()[7] = true;
			}
			if (isValidValue(fields()[8], other.created_at)) {
				this.created_at = data().deepCopy(fields()[8].schema(), other.created_at);
				fieldSetFlags()[8] = true;
			}
			if (isValidValue(fields()[9], other.text)) {
				this.text = data().deepCopy(fields()[9].schema(), other.text);
				fieldSetFlags()[9] = true;
			}
			if (isValidValue(fields()[10], other.retweet_count)) {
				this.retweet_count = data().deepCopy(fields()[10].schema(), other.retweet_count);
				fieldSetFlags()[10] = true;
			}
			if (isValidValue(fields()[11], other.retweeted)) {
				this.retweeted = data().deepCopy(fields()[11].schema(), other.retweeted);
				fieldSetFlags()[11] = true;
			}
			if (isValidValue(fields()[12], other.in_reply_to_user_id)) {
				this.in_reply_to_user_id = data().deepCopy(fields()[12].schema(), other.in_reply_to_user_id);
				fieldSetFlags()[12] = true;
			}
			if (isValidValue(fields()[13], other.source)) {
				this.source = data().deepCopy(fields()[13].schema(), other.source);
				fieldSetFlags()[13] = true;
			}
			if (isValidValue(fields()[14], other.in_reply_to_status_id)) {
				this.in_reply_to_status_id = data().deepCopy(fields()[14].schema(), other.in_reply_to_status_id);
				fieldSetFlags()[14] = true;
			}
			if (isValidValue(fields()[15], other.media_url_https)) {
				this.media_url_https = data().deepCopy(fields()[15].schema(), other.media_url_https);
				fieldSetFlags()[15] = true;
			}
			if (isValidValue(fields()[16], other.expanded_url)) {
				this.expanded_url = data().deepCopy(fields()[16].schema(), other.expanded_url);
				fieldSetFlags()[16] = true;
			}
		}

		/**
		 * Gets the value of the 'id' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getId() {
			return id;
		}

		/**
		 * Sets the value of the 'id' field.
		 * 
		 * @param value
		 *            The value of 'id'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setId(java.lang.CharSequence value) {
			validate(fields()[0], value);
			this.id = value;
			fieldSetFlags()[0] = true;
			return this;
		}

		/**
		 * Checks whether the 'id' field has been set.
		 * 
		 * @return True if the 'id' field has been set, false otherwise.
		 */
		public boolean hasId() {
			return fieldSetFlags()[0];
		}

		/**
		 * Clears the value of the 'id' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearId() {
			id = null;
			fieldSetFlags()[0] = false;
			return this;
		}

		/**
		 * Gets the value of the 'user_friends_count' field.
		 * 
		 * @return The value.
		 */
		public java.lang.Integer getUserFriendsCount() {
			return user_friends_count;
		}

		/**
		 * Sets the value of the 'user_friends_count' field.
		 * 
		 * @param value
		 *            The value of 'user_friends_count'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setUserFriendsCount(java.lang.Integer value) {
			validate(fields()[1], value);
			this.user_friends_count = value;
			fieldSetFlags()[1] = true;
			return this;
		}

		/**
		 * Checks whether the 'user_friends_count' field has been set.
		 * 
		 * @return True if the 'user_friends_count' field has been set, false
		 *         otherwise.
		 */
		public boolean hasUserFriendsCount() {
			return fieldSetFlags()[1];
		}

		/**
		 * Clears the value of the 'user_friends_count' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearUserFriendsCount() {
			user_friends_count = null;
			fieldSetFlags()[1] = false;
			return this;
		}

		/**
		 * Gets the value of the 'user_location' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getUserLocation() {
			return user_location;
		}

		/**
		 * Sets the value of the 'user_location' field.
		 * 
		 * @param value
		 *            The value of 'user_location'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setUserLocation(java.lang.CharSequence value) {
			validate(fields()[2], value);
			this.user_location = value;
			fieldSetFlags()[2] = true;
			return this;
		}

		/**
		 * Checks whether the 'user_location' field has been set.
		 * 
		 * @return True if the 'user_location' field has been set, false
		 *         otherwise.
		 */
		public boolean hasUserLocation() {
			return fieldSetFlags()[2];
		}

		/**
		 * Clears the value of the 'user_location' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearUserLocation() {
			user_location = null;
			fieldSetFlags()[2] = false;
			return this;
		}

		/**
		 * Gets the value of the 'user_description' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getUserDescription() {
			return user_description;
		}

		/**
		 * Sets the value of the 'user_description' field.
		 * 
		 * @param value
		 *            The value of 'user_description'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setUserDescription(java.lang.CharSequence value) {
			validate(fields()[3], value);
			this.user_description = value;
			fieldSetFlags()[3] = true;
			return this;
		}

		/**
		 * Checks whether the 'user_description' field has been set.
		 * 
		 * @return True if the 'user_description' field has been set, false
		 *         otherwise.
		 */
		public boolean hasUserDescription() {
			return fieldSetFlags()[3];
		}

		/**
		 * Clears the value of the 'user_description' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearUserDescription() {
			user_description = null;
			fieldSetFlags()[3] = false;
			return this;
		}

		/**
		 * Gets the value of the 'user_statuses_count' field.
		 * 
		 * @return The value.
		 */
		public java.lang.Integer getUserStatusesCount() {
			return user_statuses_count;
		}

		/**
		 * Sets the value of the 'user_statuses_count' field.
		 * 
		 * @param value
		 *            The value of 'user_statuses_count'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setUserStatusesCount(java.lang.Integer value) {
			validate(fields()[4], value);
			this.user_statuses_count = value;
			fieldSetFlags()[4] = true;
			return this;
		}

		/**
		 * Checks whether the 'user_statuses_count' field has been set.
		 * 
		 * @return True if the 'user_statuses_count' field has been set, false
		 *         otherwise.
		 */
		public boolean hasUserStatusesCount() {
			return fieldSetFlags()[4];
		}

		/**
		 * Clears the value of the 'user_statuses_count' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearUserStatusesCount() {
			user_statuses_count = null;
			fieldSetFlags()[4] = false;
			return this;
		}

		/**
		 * Gets the value of the 'user_followers_count' field.
		 * 
		 * @return The value.
		 */
		public java.lang.Integer getUserFollowersCount() {
			return user_followers_count;
		}

		/**
		 * Sets the value of the 'user_followers_count' field.
		 * 
		 * @param value
		 *            The value of 'user_followers_count'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setUserFollowersCount(java.lang.Integer value) {
			validate(fields()[5], value);
			this.user_followers_count = value;
			fieldSetFlags()[5] = true;
			return this;
		}

		/**
		 * Checks whether the 'user_followers_count' field has been set.
		 * 
		 * @return True if the 'user_followers_count' field has been set, false
		 *         otherwise.
		 */
		public boolean hasUserFollowersCount() {
			return fieldSetFlags()[5];
		}

		/**
		 * Clears the value of the 'user_followers_count' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearUserFollowersCount() {
			user_followers_count = null;
			fieldSetFlags()[5] = false;
			return this;
		}

		/**
		 * Gets the value of the 'user_name' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getUserName() {
			return user_name;
		}

		/**
		 * Sets the value of the 'user_name' field.
		 * 
		 * @param value
		 *            The value of 'user_name'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setUserName(java.lang.CharSequence value) {
			validate(fields()[6], value);
			this.user_name = value;
			fieldSetFlags()[6] = true;
			return this;
		}

		/**
		 * Checks whether the 'user_name' field has been set.
		 * 
		 * @return True if the 'user_name' field has been set, false otherwise.
		 */
		public boolean hasUserName() {
			return fieldSetFlags()[6];
		}

		/**
		 * Clears the value of the 'user_name' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearUserName() {
			user_name = null;
			fieldSetFlags()[6] = false;
			return this;
		}

		/**
		 * Gets the value of the 'user_screen_name' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getUserScreenName() {
			return user_screen_name;
		}

		/**
		 * Sets the value of the 'user_screen_name' field.
		 * 
		 * @param value
		 *            The value of 'user_screen_name'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setUserScreenName(java.lang.CharSequence value) {
			validate(fields()[7], value);
			this.user_screen_name = value;
			fieldSetFlags()[7] = true;
			return this;
		}

		/**
		 * Checks whether the 'user_screen_name' field has been set.
		 * 
		 * @return True if the 'user_screen_name' field has been set, false
		 *         otherwise.
		 */
		public boolean hasUserScreenName() {
			return fieldSetFlags()[7];
		}

		/**
		 * Clears the value of the 'user_screen_name' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearUserScreenName() {
			user_screen_name = null;
			fieldSetFlags()[7] = false;
			return this;
		}

		/**
		 * Gets the value of the 'created_at' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getCreatedAt() {
			return created_at;
		}

		/**
		 * Sets the value of the 'created_at' field.
		 * 
		 * @param value
		 *            The value of 'created_at'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setCreatedAt(java.lang.CharSequence value) {
			validate(fields()[8], value);
			this.created_at = value;
			fieldSetFlags()[8] = true;
			return this;
		}

		/**
		 * Checks whether the 'created_at' field has been set.
		 * 
		 * @return True if the 'created_at' field has been set, false otherwise.
		 */
		public boolean hasCreatedAt() {
			return fieldSetFlags()[8];
		}

		/**
		 * Clears the value of the 'created_at' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearCreatedAt() {
			created_at = null;
			fieldSetFlags()[8] = false;
			return this;
		}

		/**
		 * Gets the value of the 'text' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getText() {
			return text;
		}

		/**
		 * Sets the value of the 'text' field.
		 * 
		 * @param value
		 *            The value of 'text'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setText(java.lang.CharSequence value) {
			validate(fields()[9], value);
			this.text = value;
			fieldSetFlags()[9] = true;
			return this;
		}

		/**
		 * Checks whether the 'text' field has been set.
		 * 
		 * @return True if the 'text' field has been set, false otherwise.
		 */
		public boolean hasText() {
			return fieldSetFlags()[9];
		}

		/**
		 * Clears the value of the 'text' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearText() {
			text = null;
			fieldSetFlags()[9] = false;
			return this;
		}

		/**
		 * Gets the value of the 'retweet_count' field.
		 * 
		 * @return The value.
		 */
		public java.lang.Long getRetweetCount() {
			return retweet_count;
		}

		/**
		 * Sets the value of the 'retweet_count' field.
		 * 
		 * @param value
		 *            The value of 'retweet_count'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setRetweetCount(java.lang.Long value) {
			validate(fields()[10], value);
			this.retweet_count = value;
			fieldSetFlags()[10] = true;
			return this;
		}

		/**
		 * Checks whether the 'retweet_count' field has been set.
		 * 
		 * @return True if the 'retweet_count' field has been set, false
		 *         otherwise.
		 */
		public boolean hasRetweetCount() {
			return fieldSetFlags()[10];
		}

		/**
		 * Clears the value of the 'retweet_count' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearRetweetCount() {
			retweet_count = null;
			fieldSetFlags()[10] = false;
			return this;
		}

		/**
		 * Gets the value of the 'retweeted' field.
		 * 
		 * @return The value.
		 */
		public java.lang.Boolean getRetweeted() {
			return retweeted;
		}

		/**
		 * Sets the value of the 'retweeted' field.
		 * 
		 * @param value
		 *            The value of 'retweeted'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setRetweeted(java.lang.Boolean value) {
			validate(fields()[11], value);
			this.retweeted = value;
			fieldSetFlags()[11] = true;
			return this;
		}

		/**
		 * Checks whether the 'retweeted' field has been set.
		 * 
		 * @return True if the 'retweeted' field has been set, false otherwise.
		 */
		public boolean hasRetweeted() {
			return fieldSetFlags()[11];
		}

		/**
		 * Clears the value of the 'retweeted' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearRetweeted() {
			retweeted = null;
			fieldSetFlags()[11] = false;
			return this;
		}

		/**
		 * Gets the value of the 'in_reply_to_user_id' field.
		 * 
		 * @return The value.
		 */
		public java.lang.Long getInReplyToUserId() {
			return in_reply_to_user_id;
		}

		/**
		 * Sets the value of the 'in_reply_to_user_id' field.
		 * 
		 * @param value
		 *            The value of 'in_reply_to_user_id'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setInReplyToUserId(java.lang.Long value) {
			validate(fields()[12], value);
			this.in_reply_to_user_id = value;
			fieldSetFlags()[12] = true;
			return this;
		}

		/**
		 * Checks whether the 'in_reply_to_user_id' field has been set.
		 * 
		 * @return True if the 'in_reply_to_user_id' field has been set, false
		 *         otherwise.
		 */
		public boolean hasInReplyToUserId() {
			return fieldSetFlags()[12];
		}

		/**
		 * Clears the value of the 'in_reply_to_user_id' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearInReplyToUserId() {
			in_reply_to_user_id = null;
			fieldSetFlags()[12] = false;
			return this;
		}

		/**
		 * Gets the value of the 'source' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getSource() {
			return source;
		}

		/**
		 * Sets the value of the 'source' field.
		 * 
		 * @param value
		 *            The value of 'source'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setSource(java.lang.CharSequence value) {
			validate(fields()[13], value);
			this.source = value;
			fieldSetFlags()[13] = true;
			return this;
		}

		/**
		 * Checks whether the 'source' field has been set.
		 * 
		 * @return True if the 'source' field has been set, false otherwise.
		 */
		public boolean hasSource() {
			return fieldSetFlags()[13];
		}

		/**
		 * Clears the value of the 'source' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearSource() {
			source = null;
			fieldSetFlags()[13] = false;
			return this;
		}

		/**
		 * Gets the value of the 'in_reply_to_status_id' field.
		 * 
		 * @return The value.
		 */
		public java.lang.Long getInReplyToStatusId() {
			return in_reply_to_status_id;
		}

		/**
		 * Sets the value of the 'in_reply_to_status_id' field.
		 * 
		 * @param value
		 *            The value of 'in_reply_to_status_id'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setInReplyToStatusId(java.lang.Long value) {
			validate(fields()[14], value);
			this.in_reply_to_status_id = value;
			fieldSetFlags()[14] = true;
			return this;
		}

		/**
		 * Checks whether the 'in_reply_to_status_id' field has been set.
		 * 
		 * @return True if the 'in_reply_to_status_id' field has been set, false
		 *         otherwise.
		 */
		public boolean hasInReplyToStatusId() {
			return fieldSetFlags()[14];
		}

		/**
		 * Clears the value of the 'in_reply_to_status_id' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearInReplyToStatusId() {
			in_reply_to_status_id = null;
			fieldSetFlags()[14] = false;
			return this;
		}

		/**
		 * Gets the value of the 'media_url_https' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getMediaUrlHttps() {
			return media_url_https;
		}

		/**
		 * Sets the value of the 'media_url_https' field.
		 * 
		 * @param value
		 *            The value of 'media_url_https'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setMediaUrlHttps(java.lang.CharSequence value) {
			validate(fields()[15], value);
			this.media_url_https = value;
			fieldSetFlags()[15] = true;
			return this;
		}

		/**
		 * Checks whether the 'media_url_https' field has been set.
		 * 
		 * @return True if the 'media_url_https' field has been set, false
		 *         otherwise.
		 */
		public boolean hasMediaUrlHttps() {
			return fieldSetFlags()[15];
		}

		/**
		 * Clears the value of the 'media_url_https' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearMediaUrlHttps() {
			media_url_https = null;
			fieldSetFlags()[15] = false;
			return this;
		}

		/**
		 * Gets the value of the 'expanded_url' field.
		 * 
		 * @return The value.
		 */
		public java.lang.CharSequence getExpandedUrl() {
			return expanded_url;
		}

		/**
		 * Sets the value of the 'expanded_url' field.
		 * 
		 * @param value
		 *            The value of 'expanded_url'.
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder setExpandedUrl(java.lang.CharSequence value) {
			validate(fields()[16], value);
			this.expanded_url = value;
			fieldSetFlags()[16] = true;
			return this;
		}

		/**
		 * Checks whether the 'expanded_url' field has been set.
		 * 
		 * @return True if the 'expanded_url' field has been set, false
		 *         otherwise.
		 */
		public boolean hasExpandedUrl() {
			return fieldSetFlags()[16];
		}

		/**
		 * Clears the value of the 'expanded_url' field.
		 * 
		 * @return This builder.
		 */
		public AvroSchemaTwitter.Builder clearExpandedUrl() {
			expanded_url = null;
			fieldSetFlags()[16] = false;
			return this;
		}

		@Override
		public AvroSchemaTwitter build() {
			try {
				AvroSchemaTwitter record = new AvroSchemaTwitter();
				record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
				record.user_friends_count = fieldSetFlags()[1] ? this.user_friends_count
						: (java.lang.Integer) defaultValue(fields()[1]);
				record.user_location = fieldSetFlags()[2] ? this.user_location
						: (java.lang.CharSequence) defaultValue(fields()[2]);
				record.user_description = fieldSetFlags()[3] ? this.user_description
						: (java.lang.CharSequence) defaultValue(fields()[3]);
				record.user_statuses_count = fieldSetFlags()[4] ? this.user_statuses_count
						: (java.lang.Integer) defaultValue(fields()[4]);
				record.user_followers_count = fieldSetFlags()[5] ? this.user_followers_count
						: (java.lang.Integer) defaultValue(fields()[5]);
				record.user_name = fieldSetFlags()[6] ? this.user_name
						: (java.lang.CharSequence) defaultValue(fields()[6]);
				record.user_screen_name = fieldSetFlags()[7] ? this.user_screen_name
						: (java.lang.CharSequence) defaultValue(fields()[7]);
				record.created_at = fieldSetFlags()[8] ? this.created_at
						: (java.lang.CharSequence) defaultValue(fields()[8]);
				record.text = fieldSetFlags()[9] ? this.text : (java.lang.CharSequence) defaultValue(fields()[9]);
				record.retweet_count = fieldSetFlags()[10] ? this.retweet_count
						: (java.lang.Long) defaultValue(fields()[10]);
				record.retweeted = fieldSetFlags()[11] ? this.retweeted
						: (java.lang.Boolean) defaultValue(fields()[11]);
				record.in_reply_to_user_id = fieldSetFlags()[12] ? this.in_reply_to_user_id
						: (java.lang.Long) defaultValue(fields()[12]);
				record.source = fieldSetFlags()[13] ? this.source : (java.lang.CharSequence) defaultValue(fields()[13]);
				record.in_reply_to_status_id = fieldSetFlags()[14] ? this.in_reply_to_status_id
						: (java.lang.Long) defaultValue(fields()[14]);
				record.media_url_https = fieldSetFlags()[15] ? this.media_url_https
						: (java.lang.CharSequence) defaultValue(fields()[15]);
				record.expanded_url = fieldSetFlags()[16] ? this.expanded_url
						: (java.lang.CharSequence) defaultValue(fields()[16]);
				return record;
			} catch (Exception e) {
				throw new org.apache.avro.AvroRuntimeException(e);
			}
		}
	}

	private static final org.apache.avro.io.DatumWriter WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(
			SCHEMA$);

//	@Override
//	public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {
//		WRITER$.write(this, SpecificData.getEncoder(out));
//	}

	private static final org.apache.avro.io.DatumReader READER$ = new org.apache.avro.specific.SpecificDatumReader(
			SCHEMA$);
//
//	@Override
//	public void readExternal(java.io.ObjectInput in) throws java.io.IOException {
//		READER$.read(this, SpecificData.getDecoder(in));
//	}

}
